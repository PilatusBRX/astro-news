---
import { type CollectionEntry, getCollection } from "astro:content";
import BaseHead from "@/components/BaseHead.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Breadcrumb from "@/components/Breadcrumb.astro";
import RelatedPosts from "@/components/RelatedPosts.astro";
import { type BlogProps } from "@/types/blog";
import "../styles/global.css";

export async function getStaticPaths() {
  const posts = (await getCollection("blog")) as BlogProps[];
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}

type Props = CollectionEntry<"blog">;
const { title, description } = Astro.props;
---

<html lang="pt-BR">
  <head>
    <BaseHead title={title} description={description} />
  </head>
  <body>
    <Header />
    <main>
      <div class="main-content">
        <Breadcrumb currentPath={Astro.url.pathname} />
        <slot />
      </div>
      <aside></aside>
    </main>
    <Footer />
  </body>
</html>
<style>
  main {
    width: 100%;
    max-width: 1140px;
    padding-left: 2rem;
    padding-right: 2rem;
    margin: auto;
    display: flex;
    flex-direction: row;
  }
  main .main-content {
    width: 70%;
  }
  main aside {
    width: 28%;
    background-color: #70809074;
  }

  @media screen and (max-width: 720px) {
    main {
      width: fit-content;
      padding-left: 1rem;
      padding-right: 1rem;
      margin: auto;
    }
  }
  main img,
  .hero-image {
    width: 100%;
  }
  .hero-image img {
    display: block;
    margin: 0 auto;
    border-radius: 12px;
    box-shadow: var(--box-shadow);
  }
  .prose {
    width: 720px;
    max-width: calc(100% - 2em);
    margin: auto;
    padding: 1em;
    color: rgb(var(--gray-dark));
  }
  .title {
    margin-bottom: 1em;
    padding: 1em 0;
    text-align: center;
    line-height: 1;
  }
  .title h1 {
    margin: 0 0 0.5em 0;
  }
  .date {
    margin-bottom: 0.5em;
    color: rgb(var(--gray));
  }
  .last-updated-on {
    font-style: italic;
  }
</style>
